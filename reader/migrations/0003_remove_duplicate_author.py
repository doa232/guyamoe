# Generated by Django 3.2.2 on 2021-06-19 02:14

from django.db import migrations
from django_extensions.db.fields import AutoSlugField
from reader.models import Person, Series

def create_unique_slug(apps, schema_editor):
    for instance in Person.objects.all():
        print("Generating slug for %s" % instance)
        instance.save() # Will trigger slug update

def remove_duplicate(apps, schema_editor):
    name_to_instance = {}
    # Get a unique instance for all the persons. Chose the instance with the shortest slug
    for person in Person.objects.all():
        if str(person.name) not in name_to_instance or len(str(name_to_instance[str(person.name)].slug)) > len(str(person.slug)):
            name_to_instance[str(person.name)] = person
    # Make series author and artist point to the unique instance
    for series in Series.objects.all():
        series.author = name_to_instance[str(series.author.name)]
        series.artist = name_to_instance[str(series.artist.name)]
        series.save()
    # Delete all duplicate persons
    for person in Person.objects.all():
        if name_to_instance[str(person.name)].id != person.id:
            person.delete()

def migrate_data_backward(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('reader', '0002_series_is_nsfw'),
    ]

    operations = [
        migrations.AddField(
            model_name='person',
            name='slug',
            field=AutoSlugField(null=True, default=None, unique=True, db_index=True, editable=True, populate_from='name'),
        ),
        migrations.RunPython(
            create_unique_slug,
            migrate_data_backward,
        ),
        migrations.RunPython(
            remove_duplicate,
            migrate_data_backward,
        ),
    ]
